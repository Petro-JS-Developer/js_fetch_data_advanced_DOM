{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","arrPromises","arrPromisesWith3Element","request","url","fetch","then","response","ok","status","statusText","json","getFirstReceivedDetails","ids","Promise","forEach","id","newPromise","resolve","setTimeout","Math","round","random","push","race","getAllSuccessfulDetails","arrIds","all","map","listPhones","phonesIds","phone","IdFirstPromise","details","console","log","arrDetails"],"mappings":";AAAA,aAEA,IAAMA,EAAW,4DACXC,EAAc,GACdC,EAA0B,GAE1BC,EAAU,SAACC,GAERC,OAAAA,MAASL,GAAAA,OAAAA,GAAWI,OAAAA,IACxBE,KAAK,SAAAC,GACA,IAACA,EAASC,GAEHD,KAAAA,GAAAA,OAAAA,EAASE,OAAYF,OAAAA,OAAAA,EAASG,YAGlCH,OAAAA,EAASI,UA0BtB,SAASC,EAAwBC,GAWxBC,OAVPD,EAAIE,QAAQ,SAAAC,GACJC,IAAAA,EAAa,IAAIH,QAAQ,SAAAI,GAC7BC,WAAW,WACTD,EAAQF,IACPI,KAAKC,MAAsB,IAAhBD,KAAKE,aAGrBrB,EAAYsB,KAAKN,KAGZH,QAAQU,KAAKvB,GAGtB,SAASwB,EAAwBC,GACxBZ,OAAAA,QAAQa,IACbD,EAAOE,IAAI,SAAAZ,GACFb,OAAAA,EAAmBa,WAAAA,OAAAA,EAAnB,UACJV,KAAK,SAAAC,GAAYA,OAAAA,OAxC1BJ,EAAQ,gBACLG,KAAK,SAAAuB,GACEC,IAAAA,EAAYD,EAAWD,IAAI,SAAAG,GAASA,OAAAA,EAAMf,KAEhDJ,EAAwBkB,GACrBxB,KAAK,SAAC0B,GACL7B,EAAmB6B,WAAAA,OAAAA,EAAnB,UACG1B,KAAK,SAAA2B,GAEJC,QAAQC,IAAIF,OAIpBR,EAAwBK,GAErBxB,KAAK,SAAA8B,GAAcF,OAAAA,QAAQC,IAAIC","file":"main.9b01c7d0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\nconst arrPromises = [];\nconst arrPromisesWith3Element = [];\n\nconst request = (url) => {\n  // eslint-disable-next-line no-undef\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        // eslint-disable-next-line no-throw-literal\n        throw `${response.status} - ${response.statusText}`;\n      }\n\n      return response.json();\n    });\n};\n\nrequest('/phones.json')\n  .then(listPhones => {\n    const phonesIds = listPhones.map(phone => phone.id);\n\n    getFirstReceivedDetails(phonesIds)\n      .then((IdFirstPromise) => {\n        request(`/phones/${IdFirstPromise}.json`)\n          .then(details => {\n            // eslint-disable-next-line no-console\n            console.log(details);\n          });\n      });\n\n    getAllSuccessfulDetails(phonesIds)\n      // eslint-disable-next-line no-console\n      .then(arrDetails => console.log(arrDetails));\n\n    // getThreeFastestDetails(phonesIds)\n    //   // eslint-disable-next-line no-console\n    //   .then(results => console.log(results));\n  });\n\nfunction getFirstReceivedDetails(ids) {\n  ids.forEach(id => {\n    const newPromise = new Promise(resolve => {\n      setTimeout(() => {\n        resolve(id);\n      }, Math.round(Math.random() * 1000));\n    });\n\n    arrPromises.push(newPromise);\n  });\n\n  return Promise.race(arrPromises);\n}\n\nfunction getAllSuccessfulDetails(arrIds) {\n  return Promise.all(\n    arrIds.map(id => {\n      return request(`/phones/${id}.json`)\n        .then(response => response);\n    })\n  );\n}\n\n// function getThreeFastestDetails(arrayIds) {\n//   arrayIds.forEach(id => {\n//     const newPromise = new Promise(resolve => {\n//       setTimeout(() => {\n//         resolve(id);\n//       }, Math.round(Math.random() * 1000));\n//     });\n\n//     arrPromisesWith3Element.push(newPromise);\n//   });\n\n//   return Promise.all(arrPromisesWith3Element);\n// }\n"]}